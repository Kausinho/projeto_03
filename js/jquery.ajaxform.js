/ *!
 * Plug-in de formulário jQuery
 * versão: 3.51.0-2014.06.20
 * Requer jQuery v1.5 ou posterior
 * Copyright (c) 2014 M. Alsup
 * Exemplos e documentação em: http://malsup.com/jquery/form/
 * Repositório do projeto: https://github.com/malsup/form
 * Licença dupla sob as licenças MIT e GPL.
 * https://github.com/malsup/form#copyright-and-license
 * /
! function (e) {"use strict"; "function" == typeof define && define.amd? define (["jquery"], e): e ("undefined"! = typeof jQuery? jQuery: window.Zepto)} ( function (e) {"usar estrito"; função t (t) {var r = t.data; t.isDefaultPrevented () || (t.preventDefault (), e (t.target) .ajaxSubmit (r))} função r (t) {var r = t.target, a = e (r); if (! a.is ("[type = submit], [type = image]")) {var n = a.closest ( "[type = submit]"); if (0 === n.length) return; r = n [0]} var i = this; if (i.clk = r, "imagem" == r.type) if (void 0! == t.offsetX) i.clk_x = t.offsetX, i.clk_y = t.offsetY; else if ("função" == typeof e.fn.offset) {var o = a.offset ( ); i.clk_x = t.pageX-o.left, i.clk_y = t.pageY-o.top} else i.clk_x = t.pageX-r.offsetLeft, i.clk_y = t.pageY-r.offsetTop ; setTimeout (function () {i.clk = i.clk_x = i.clk_y = null}, 100)} function a () {if (e.fn.ajaxSubmit.debug) {var t = "[jquery.form]" + Array.prototype.join.call (argumentos, ""); window.console && window.console.log? window.console.log (t): window.opera && window.opera .postError && window.opera.postError (t)}} var n = {}; n.fileapi = void 0! == e ("<input type = 'file' />"). get (0) .files, n. formdata = void 0! == window.FormData; var i = !! e.fn.prop; e.fn.attr2 = function () {if (! i) return this.attr.apply (this, argumentos); var e = this.prop.apply (this, argumentos); return e && e.jquery || "string" == typeof e? e: this.attr.apply (this, argumentos)}, e.fn.ajaxSubmit = function (t ) {função r (r) {var a, n, i = e.param (r, t.tradicional) .split ("&"), o = i.length, s = []; para (a = 0; o> a; a ++) i [a] = i [a] .replace (/ \ + / g, ""), n = i [a] .split ("="), s.push ([decodeURIComponent (n [0]), decodeURIComponent (n [1])]);return s} função o (a) {for (var n = new FormData, i = 0; i <a.length; i ++) n.append (a [i] .name, a [i] .value); if ( t.extraData) {var o = r (t.extraData); para (i = 0; i <o.length; i ++) o [i] && n.append (o [i] [0], o [i] [ 1])} t.data = null; var s = e.extend (! 0, {}, e.ajaxSettings, t, {contentType:! 1, processData:! 1, cache:! 1, tipo: u || "POST"}); t.uploadProgress && (s.xhr = function () {var r = e.ajaxSettings.xhr (); return r.upload && r.upload.addEventListener ("progresso", função (e) {var r = 0, a = e.loaded || e.position, n = e.total; e.lengthComputable && (r = Math.ceil (a / n * 100)), t.uploadProgress (e, a, n, r)} ,! 1), r}), s.data = null; var c = s.beforeSend; retornar s.beforeSend = function (e, r) {r.data = t.formData? T.formData: n, c && c. chamar (this, e, r)}, e.ajax (s)} function s (r) {function n (e) {var t = null; try {e.contentWindow && (t = e.contentWindow.document)} catch (r) {a ("não é possível obter iframe.contentWindow document: "+ r)} if (t) return t; tente {t = e.contentDocument? e.contentDocument: e.document} catch (r) {a (" não é possível obter iframe.contentDocument: " + r), t = e.document} return t} função o () {function t () {try {var e = n (g) .readyState; a ("estado =" + e), e && "não inicializado" = = e.toLowerCase () && setTimeout (t, 50)} catch (r) {a ("Abortar servidor:", r, "(", r.name, ")"), s (k), j && clearTimeout (j) , j = void 0}} var r = f.attr2 ("destino"), i = f.attr2 ("ação"), o = "multipart / form-data", c = f.attr ("enctype") || f.attr ("encoding") || o; w.setAttribute ("target", p), (! u || /post/i.test (u)) && w.setAttribute ("método", "POST "), i! = m.url && w.setAttribute (" ação ", m.url), m.skipEncodingOverride || u &&!/post/i.test(u)||f.attr({encoding:"multipart/form-data",enctype:"multipart/form-data "}), m.timeout && (j = setTimeout (function () { T =! 0, s (D)}, m.timeout)); var l = []; tente {if (m.extraData) para (var d em m.extraData) m.extraData.hasOwnProperty (d) && l. push (e.isPlainObject (m.extraData [d]) && m.extraData [d] .hasOwnProperty ("nome") && m.extraData [d] .hasOwnProperty ("valor")? e ('<tipo de entrada = "oculto" name = "'+ m.extraData [d] .name +'"> '). val (m.extraData [d] .value) .appendTo (w) [0]: e (' <input type = nome "oculto" = "'+ d +'"> '). val (m.extraData [d]). appendTo (w) [0]); m.iframeTarget || v.appendTo ("corpo"), g.attachEvent? g. attachEvent ("onload", s): g.addEventListener ("load", s,! 1), setTimeout (t, 15); tente {w.submit ()} catch (h) {var x = document.createElement ("form"). submit; x.apply (w)}} finalmente {w.setAttribute ("action", i), w.setAttribute ("enctype ", c), r? w.setAttribute (" destino ", r): f.removeAttr (" destino "), e (l) .remove ()}} função s (t) {if (! x.aborted &&! F) {if (M = n (g), M || (a ("não é possível acessar o documento de resposta"), t = k), t === D && x) return x.abort ("tempo limite"), vazio S. rejeitar (x, "tempo limite"); if (t == k && x) retornar x.abort ("abortar servidor"), void S.reject (x, "erro", "abortar servidor"); href! = m.iframeSrc || T) {g.detachEvent? g.detachEvent ("onload", s): g.removeEventListener ("load", s,! 1); var r, i = "sucesso"; tente {if (T) lançar "tempo limite"; var o = "xml" == m.dataType || M.XMLDocument || e.isXMLDoc (M); if (a ("isXml = "+ o) ,! o && window.opera && (null === M.body ||! M.body.innerHTML) && - O) return a (" requeing onLoad callback, DOM não disponível "), void setTimeout ( s, 250); var u = M.body? M.body: M.documentElement; x.responseText = u? u.innerHTML: null, x.responseXML = M.XMLDocument? M.XMLDocument: M, o && (m. dataType = "xml"), x.getResponseHeader = function (e) {var t = {"content-type": m.dataType}; return t [e.toLowerCase ()]}, u && (x.status = Number ( u.getAttribute ("status")) || x.status, x.statusText = u.getAttribute ("statusText") || x.statusText); var c = (m.dataType || ""). toLowerCase () , l = / (json | script | texto) /. test (c); if (l || m.textarea) {var f = M.getElementsByTagName ("textarea") [0]; if (f) x.responseText = f.value, x.status = Number (f.getAttribute ("status")) || x.status, x.statusText = f.getAttribute ("statusText") || x.statusText; else if (l) {var p = M.getElementsByTagName ("pre") [0], h = M.getElementsByTagName ("body") [0]; p? x .responseText = p.textContent? p.textContent: p.innerText: h && (x.responseText = h.textContent? h.textContent: h.innerText)}} else "xml" == c &&! x.responseXML && x.responseText && (x .responseXML = X (x.responseText)); tente {E = _ (x, c, m)} catch (y) {i = "parsererror", x.error = r = y || i}} catch (y ) {a ("erro detectado:", y), i = "erro", x.error = r = y || i} x.aborted && (a ("upload cancelado"), i = null), x.status && (i = x.status> = 200 && x.status <300 || 304 === x.status? "sucesso": "erro"), "sucesso" === i? (m.success && m.success.call (m .context, E, "sucesso", x), S.resolve (x.responseText, "sucesso", x),d && e.event.trigger ("ajaxSuccess", [x, m])): i && (vazio 0 === r && (r = x.statusText), m.error && m.error.call (m.context, x, i, r), S.reject (x, "erro", r), d && e.event.trigger ("ajaxError", [x, m, r])), d && e.event.trigger ("ajaxComplete", [x, m ]), d &&! - e.active && e.event.trigger ("ajaxStop"), m.complete && m.complete.call (m.context, x, i), F =! 0, m.timeout && clearTimeout (j), setTimeout (function () {m.iframeTarget? v.attr ("src", m.iframeSrc): v.remove (), x.responseXML = null}, 100)}}} var c, l, m, d, p , v, g, x, y, b, T, j, w = f [0], S = e.Deferred (); if (S. abort = function (e) {x.abort (e)}, r ) para (l = 0; l <h.length; l ++) c = e (h [l]), i? c.prop ("desativado",! 1): c.removeAttr ("desativado"); if ( m = e.extend (! 0, {}, e.ajaxSettings, t), m.context = m.context || m, p = "jqFormIO"+ (nova data) .getTime (), m.iframeTarget? (v = e (m.iframeTarget), b = v.attr2 ("nome"), b? p = b: v.attr2 ("nome", p )) :( v = e ('<iframe name = "' + p + '" src = "' + m.iframeSrc + '" />'),v.css({position:"absolute",top:"-1000px ", à esquerda:" - 1000px "})), g = v [0], x = {cancelado: 0, responseText: null, responseXML: null, status: 0, statusText:" n / a ", getAllResponseHeaders: function ( ) {}, getResponseHeader: function () {}, setRequestHeader: function () {}, abort: function (t) {var r = "timeout" === t? "timeout": "aborted"; a ("aborting upload ... "+ r), this.aborted = 1; tente {g.contentWindow.document.execCommand && g.contentWindow.document.execCommand (" Stop ")} catch (n) {} v.attr (" src ", m.iframeSrc), x.error = r, m.error && m.error.call (m.context, x, r, t), d &&e.event.trigger ("ajaxError", [x, m, r]), m.complete && m.complete.call (m.context, x, r)}}, d = m.global, d && 0 === e. active ++ && e.event.trigger ("ajaxStart"), d && e.event.trigger ("ajaxSend", [x, m]), m.beforeSend && m.beforeSend.call (m.context, x, m) === ! 1) return m.global && e.active -, S.reject (), S; if (x.aborted) return S.reject (), S; y = w.clk, y && (b = y.name, b && ! y.disabled && (m.extraData = m.extraData || {}, m.extraData [b] = y.value, "imagem" == y.type && (m.extraData [b + ". x"] = w. clk_x, m.extraData [b + ". y"] = w.clk_y))); var D = 1, k = 2, A = e ("meta [nome = csrf-token]"). attr ("conteúdo" ), L = e ("meta [nome = csrf-param]"). Attr ("conteúdo"); L && A && (m.extraData = m.extraData || {}, m.extraData [L] = A), m .forceSync? o (): setTimeout (o, 10); var E,M, F, O = 50, X = e.parseXML || function (e, t) {janela de retorno.ActiveXObject? (T = novo ActiveXObject ("Microsoft.XMLDOM"), t.async = "false", t. loadXML (e)): t = (novo DOMParser) .parseFromString (e, "text / xml"), t && t.documentElement && "parsererror"! = t.documentElement.nodeName? t: null}, C = e.parseJSON || function (e) {return window.eval ("(" + e + ")")}, _ = function (t, r, a) {var n = t.getResponseHeader ("content-type") || "", i = "xml" === r ||! r && n.indexOf ("xml")> = 0, o = i? t.responseXML: t.responseText; return i && "parsererror" === o.documentElement.nodeName && e. erro && e.error ("parsererror"), a && a.dataFilter && (o = a.dataFilter (o, r)), "string" == typeof o && ("json" === r ||! r && n.indexOf ("json")> = 0? O = C (o) :( "script" === r ||! R && n.indexOf ("javascript")> = 0) && e.globalEval (o)), o}; retornar S} se (! this.length) return a ("ajaxSubmit: ignorando processo de envio - nenhum elemento selecionado"), this; var u, c, l, f = this; "function" == typeof t? t = {success: t} : void 0 === t && (t = {}), u = t.type || this.attr2 ("método"), c = t.url || this.attr2 ("ação"), l = "string "== typeof c? e.trim (c):" ", l = l || window.location.href ||" ", l && (l = (l.match (/ ^ ([^ #] +) / ) || []) [1]), t = e.extend (! 0, {url: l, sucesso: e.ajaxSettings.success, digite: u || e.ajaxSettings.type, iframeSrc: / ^ https / i.test (window.location.href || "")? "javascript: false": "about: blank"}, t); var m = {}; if (this.trigger ("form-pre-serialize" , [this, t, m]), m.veto) return a ("ajaxSubmit:envio vetado por meio do acionador de pré-serialização de formulário "), this; if (t.beforeSerialize && t.beforeSerialize (this, t) ===! 1) return a (" ajaxSubmit: envio abortado via callback beforeSerialize "), isso; var d = t.traditional; void 0 === d && (d = e.ajaxSettings.traditional); var p, h = [], v = this.formToArray (t.semantic, h); if (t.data && (t. extraData = t.data, p = e.param (t.data, d)), t.beforeSubmit && t.beforeSubmit (v, this, t) ===! 1) return a ("ajaxSubmit: envio abortado via beforeSubmit callback" ), this; if (this.trigger ("form-submit-validate", [v, this, t, m]), m.veto) return a ("ajaxSubmit: submit veted via form-submit-validate trigger") , isto; var g = e.param (v, d); p && (g = g? g + "&" + p: p), "GET" == t.type.toUpperCase ()? (t.url + = ( t.url.indexOf ("?")> = 0? "&": "?") + g, t.data = null): t.data = g; var x = []; if (t.resetForm && x.push (function () {f.resetForm ()}), t.clearForm && x.push (function () {f.clearForm (t.includeHidden)}) ,! t.dataType && t.target) {var y = t.success || function () {}; x.push (function (r) {var a = t.replaceTarget? "replaceWith": "html"; e (t .target) [a] (r) .each (y, argumentos)})} else t.success && x.push (t.success); if (t.success = function (e, r, a) {for (var n = t.contexto || this, i = 0, o = x.length; o> i; i ++) x [i] .apply (n, [e, r, a || f, f])}, t. erro) {var b = t.error; t.error = função (e, r, a) {var n = t.contexto || this; b.aplicar (n, [e, r, a, f])} } if (t.complete) {var T = t.complete; t.complete = function (e, r) {var a = t.context || this; T.aplicar (a, [e, r, f]) }} var j = e ("input [type = file]: enabled", this) .filter (function () {return ""! == e (this) .val ()}), w = j.length> 0, S = "multipart / form-data", D = f.attr ("enctype") == S || f.attr ("codificação") == S, k = n.fileapi && n.formdata; a ("arquivoAPI:" + k); var A, L = (w || D) &&! k; t.iframe! ==! 1 && (t.iframe || L)? T.closeKeepAlive? E.get (t.closeKeepAlive, function () {A = s (v)}): A = s (v): A = (w || D) && k? o (v): e.ajax (t), f.removeData ("jqxhr"). data ("jqxhr", A); for (var E = 0; E <h.length; E ++) h [E ] = nulo; retornar this.trigger ("formulário-enviar-notificar", [isso, t]), isso}, e.fn.ajaxForm = função (n) {if (n = n || {}, n. delegação = n.delegation && e.isFunction (e.fn.on) ,! n.delegation && 0 === this.length) {var i = {s: this.selector, c: this.context}; return! e.isReady && i. s? (a ("DOM não está pronto, enfileirando ajaxForm"), e (function () {e (is, ic) .ajaxForm (n)}), this) :( a ("terminando; zero elementos encontrados pelo seletor" + (e.isReady? "": "(DOM não está pronto)")), este)} retorna n.delegação? (e (document) .off ("submit.form-plugin", this.selector, t) .off ("click.form-plugin", this.selector, r) .on ("submit.form-plugin ", this.selector, n, t) .on (" click.form-plugin ", this.selector, n, r), this): this.ajaxFormUnbind (). bind (" submit.form-plugin ", n , t) .bind ("click.form-plugin", n, r)}, e.fn.ajaxFormUnbind = function () {return this.unbind ("submit.form-plugin click.form-plugin")}, e.fn.formToArray = function (t, r) {var a = []; if (0 === this.length) retorna a; var i, o = this [0], s = this.attr ("id "), u = t? o.getElementsByTagName (" * "): o.elements; if (u &&! / MSIE [678] /. test (navigator.userAgent) && (u = e (u) .get ()) , s && (i = e (': input [form = "' + s + '"]'). get (), i.length && (u = (u || []). concat (i))) ,! u ||! comprimento u) retorna a; var c, l, f, m, d, p, h; para (c = 0, p = comprimento u;p> c; c ++) if (d = u [c], f = d.name, f &&! d.disabled) if (t && o.clk && "image" == d.type) o.clk == d && (a. push ({nome: f, valor: e (d) .val (), tipo: d.tipo}), a.push ({nome: f + ". x", valor: o.clk_x}, {nome: f + ".y", valor: o.clk_y})); else if (m = e.fieldValue (d,! 0), m && m.constructor == Array) para (r && r.push (d), l = 0, h = m.length; h> l; l ++) a.push ({nome: f, valor: m [l]}); else if (n.fileapi && "arquivo" == d.tipo) {r && r.push (d ); var v = d.files; if (v.length) for (l = 0; l <v.length; l ++) a.push ({name: f, value: v [l], type: d.type }); else a.push ({name: f, value: "", type: d.type})} else null! == m && "undefined"! = typeof m && (r && r.push (d), a.push ({nome: f, valor: m, tipo: d.tipo, obrigatório: d.requirido})); if (! t && o.clk) {var g = e (o.clk), x = g [0]; f = x.name, f &&! x.disabled && "imagem "== x.type && (a.push ({nome: f, valor: g.val ()}), a.push ({nome: f +". x ", valor: o.clk_x}, {nome: f + ". y", valor: o.clk_y}))} return a}, e.fn.formSerialize = function (t) {return e.param (this.formToArray (t))}, e.fn.fieldSerialize = function (t) {var r = []; retornar this.each (function () {var a = this.name; if (a) {var n = e.fieldValue (this, t); if (n && n.constructor = = Matriz) para (var i = 0, o = n.length; o> i; i ++) r.push ({nome: a, valor: n [i]}); senão nulo! == n && "indefinido"! = typeof n && r.push ({name: this.name, value: n})}}), e.param (r)}, e.fn.fieldValue = function (t) {for (var r = [], a = 0, n = this.length; n> a; a ++) {var i = this [a], o = e.fieldValue (i, t); null === o || "indefinido" == typeof o | | o.constructor == Array &&! o.length || (o.constructor == Array? e.merge (r, o): r.push (o))} return r}, e.fieldValue = function (t, r) {var a = t.name, n = t.type, i = t.tagName.toLowerCase (); if (void 0 === r && (r =! 0), r && (! a || t.disabled || "reset" == n || "botão" == n || ("caixa de seleção" == n || "radio" == n) &&! t.checked || ("enviar" == n || "imagem" == n) && t.form && t.form.clk! = t || "selecionar" == i && - 1 == t.selectedIndex)) retorna nulo; if ("selecionar" == i) {var o = t.selectedIndex; if (0> o) retorna nulo; para (var s = [], u = t.options, c = "select-one" == n, l = c? o + 1: u.length, f = c? o: 0; l> f; f ++) {var m = u [f] ; if (m.selected) {var d = m.value; if (d || (d = m.attributes && m.attributes.value &&! m.attributes.value.specified? m.text: m.value), c) return d; s.push (d)}} return s} return e (t) .val ()}, e.fn.clearForm = function (t) {return this.each (function () {e ("input, select, textarea ", this) .clearFields (t)})}, e.fn.clearFields = e.fn.clearInputs = function (t) {var r = / ^ (?: color | date | datetime | email | month | number | password | range | search | tel | text | time | url | week) $ / i; retornar isto. each (function () {var a = this.type, n = this.tagName.toLowerCase (); r.test (a) || "textarea" == n? this.value = "": "checkbox" == a || "radio" == a? this.checked =! 1: "select" == n? this.selectedIndex = -1: "arquivo" == a? /MSIE/.test (navigator.userAgent)? e (this) .replaceWith (e (this) .clone (! 0)): e (this) .val (""): t && (t ===! 0 && / hidden / .test (a) || "string" == typeof t && e (this) .is (t)) && (this.value = "")})}, e.fn.resetForm = function () {return this.each (function () {("function" = = typeof this.reset || "object" == typeof this.reset &&! this.reset.nodeType) && this.reset ()})}, e.fn.enable = function (e) {return void 0 === e &&(e =! 0), this.each (function () {this.disabled =! e})}, e.fn.selected = function (t) {return void 0 === t && (t =! 0), this.each (function () {var r = this.type; if ("checkbox" == r || "radio" == r) this.checked = t; else if ("opção" == this.tagName. toLowerCase ()) {var a = e (this) .parent ("select"); t && a [0] && "select-one" == a [0] .type && a.find ("option"). selected (! 1 ), this.selected = t}})}, e.fn.ajaxSubmit.debug =! 1});selecionado (! 1), this.selected = t}})}, e.fn.ajaxSubmit.debug =! 1});selecionado (! 1), this.selected = t}})}, e.fn.ajaxSubmit.debug =! 1});